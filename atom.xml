<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>d.o.it - Let&#39;s try things</title>
  
  <subtitle>Let&#39;s try things</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://do-it-ger.github.io/"/>
  <updated>2019-03-20T16:45:14.170Z</updated>
  <id>https://do-it-ger.github.io/</id>
  
  <author>
    <name>Powered by d.o.it</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Get Licenses from used NuGet Packages for .NET Core Solution</title>
    <link href="https://do-it-ger.github.io/2019/03/19/Get-Licenses-from-used-NuGet-Packages/"/>
    <id>https://do-it-ger.github.io/2019/03/19/Get-Licenses-from-used-NuGet-Packages/</id>
    <published>2019-03-19T14:47:47.000Z</published>
    <updated>2019-03-20T16:45:14.170Z</updated>
    
    <content type="html"><![CDATA[<p>ToDo: Get all licenses from used NuGet Packages in the Visual Studio Solution. Create a licence text file or Excel file with all found license and save all licence as a separate Text File.</p><h1 id="Let’s-try-something…"><a href="#Let’s-try-something…" class="headerlink" title="Let’s try something…"></a>Let’s try something…</h1><p>Best solution so far: jump to <a href="#solution4">Solution 4</a> or <a href="#solution5">Solution 5</a></p><h2 id="Solution-1-Get-Package"><a href="#Solution-1-Get-Package" class="headerlink" title="Solution 1 - Get-Package"></a>Solution 1 - Get-Package</h2><ul><li>Open Visual Studio .NET Core Solution </li><li><p>Open Package Manager Console and execute:</p><p> Get-Package | Select-Object Id,LicenseUrl</p><p>Result:</p><p> xunit.runner.visualstudio                               <a href="https://raw.githubusercontent.com/xunit/xunit/master/license.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/xunit/xunit/master/license.txt</a><br> NSubstitute                                             <a href="https://github.com/nsubstitute/NSubstitute/raw/master/LICENSE.txt" target="_blank" rel="noopener">https://github.com/nsubstitute/NSubstitute/raw/master/LICENSE.txt</a>         </p></li></ul><p>Good… but the direct reference project nuget package. Need also the Licence of all dlls.</p><h2 id="Solution-2-PowerShell-Save-license-as-text-file"><a href="#Solution-2-PowerShell-Save-license-as-text-file" class="headerlink" title="Solution 2 - PowerShell: Save license as text file"></a>Solution 2 - PowerShell: Save license as text file</h2><p>Try out with the PowerShell script. Save the code as DownloadNugetLicense.ps1 in the VS solution director.</p><p>Run the PowerShell Script with  ./DownloadNugetLicense.ps1 inthe VS Package Manager Console.</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><pre><code>Split-Path -parent $dte.Solution.FileName | cd; New-Item -ItemType Directory -Force -Path &quot;.\licenses&quot;;@( Get-Project -All | ? { $_.ProjectName } | % {    Get-Package -ProjectName $_.ProjectName | ? { $_.LicenseUrl }} ) | Sort-Object Id -Unique | % {    $pkg = $_;    Try {        if ($pkg.Id -notlike &apos;microsoft*&apos; -and $pkg.LicenseUrl.StartsWith(&apos;http&apos;)) {            Write-Host (&quot;Download license for nuget package &quot; + $pkg.Id + &quot; from &quot; + $pkg.LicenseUrl);            #Write-Host (ConvertTo-Json ($pkg));            $licenseUrl = $pkg.LicenseUrl            if ($licenseUrl.contains(&apos;github.com&apos;)) {                $licenseUrl = $licenseUrl.replace(&quot;/blob/&quot;, &quot;/raw/&quot;)            }            $extension = &quot;.txt&quot;            if ($licenseUrl.EndsWith(&quot;.md&quot;)) {                $extension = &quot;.md&quot;            }            (New-Object System.Net.WebClient).DownloadFile($licenseUrl, (Join-Path (pwd) &apos;licenses\&apos;) + $pkg.Id + $extension);        }    }    Catch [system.exception] {        Write-Host (&quot;Could not download license for &quot; + $pkg.Id)    }}</code></pre><h2 id="Solution-3-PowerShell-All-license-in-package-manager-output"><a href="#Solution-3-PowerShell-All-license-in-package-manager-output" class="headerlink" title="Solution 3 - PowerShell: All license in package manager output"></a>Solution 3 - PowerShell: All license in package manager output</h2><h2 id="Not-perfect"><a href="#Not-perfect" class="headerlink" title="Not perfect:"></a>Not perfect:</h2><pre><code>NuGet Package License---------------------Id      |      LicenseUrl  |    License---------------------Abp.AspNetCore; https://github.com/aspnetboilerplate/aspnetboilerplate/blob/master/LICENSE; The MIT License (MIT)Abp.AspNetCore.SignalR; https://github.com/aspnetboilerplate/aspnetboilerplate/blob/master/LICENSE; The MIT License (MIT)Abp.AutoMapper; https://github.com/aspnetboilerplate/aspnetboilerplate/blob/master/LICENSE; The MIT License (MIT)Abp.Castle.Log4Net; https://github.com/aspnetboilerplate/aspnetboilerplate/blob/master/LICENSE; The MIT License (MIT)Abp.HangFire; https://github.com/aspnetboilerplate/aspnetboilerplate/blob/master/LICENSE; The MIT License (MIT)Abp.RedisCache; https://github.com/aspnetboilerplate/aspnetboilerplate/blob/master/LICENSE; The MIT License (MIT)Abp.TestBase; https://github.com/aspnetboilerplate/aspnetboilerplate/blob/master/LICENSE; The MIT License (MIT)Abp.ZeroCore; https://github.com/aspnetboilerplate/aspnetboilerplate/blob/master/LICENSE; The MIT License (MIT)Abp.ZeroCore.EntityFrameworkCore; https://github.com/aspnetboilerplate/aspnetboilerplate/blob/master/LICENSE; The MIT License (MIT)AspNet.Security.OpenIdConnect.Server; http://www.apache.org/licenses/LICENSE-2.0.html; &lt;!DOCTYPE html&gt;Castle.Core; http://www.apache.org/licenses/LICENSE-2.0.html; &lt;!DOCTYPE html&gt;</code></pre><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><pre><code>Write-Host(&quot;---------------------&quot;);Write-Host(&quot;NuGet Package License&quot;);Write-Host(&quot;---------------------&quot;);Write-Host(&quot;Id      |      LicenseUrl  |    License&quot;); Write-Host(&quot;---------------------&quot;);@( Get-Project -All | ? { $_.ProjectName } | % {    Get-Package -ProjectName $_.ProjectName | ? { $_.LicenseUrl }} ) | Sort-Object Id -Unique | % {    $pkg = $_;    $file =     Try {        if ($pkg.Id -notlike &apos;microsoft*&apos; -and $pkg.LicenseUrl.StartsWith(&apos;http&apos;)) {            $licenseUrl = $pkg.LicenseUrl            if ($licenseUrl.contains(&apos;github.com&apos;)) {                $licenseUrl = $licenseUrl.replace(&quot;/blob/&quot;, &quot;/raw/&quot;)            }            $extension = &quot;.txt&quot;            if ($licenseUrl.EndsWith(&quot;.md&quot;)) {                $extension = &quot;.md&quot;            }            $filePath = (Join-Path (pwd) &apos;licenses\&apos;) + $pkg.Id + $extension;            $textLicence = Get-Content $filePath | Select-Object -First 1            Write-Host($pkg.Id + &quot;; &quot; + $_.LicenseUrl + &quot;; &quot; + $textLicence);        }    }    Catch [system.exception] {    Write-Host ($error[0].Exception);        Write-Host (&quot;Could not read license for &quot; + $pkg.Id)    }}</code></pre><h2 id="Solution-4-Visual-Studio-Tool-‘Package-Licenses’"><a href="#Solution-4-Visual-Studio-Tool-‘Package-Licenses’" class="headerlink" title="Solution 4 - Visual Studio Tool ‘Package Licenses’"></a>Solution 4 - Visual Studio Tool ‘Package Licenses’</h2><div id="solution4"><br><br>List license of NuGet packages in ‘packages’ folder of a solution. Infer license from projectUrl and licenseUrl in the package’s metadata. Download license text from GtiHub and spdx.org.<br><br><a href="https://marketplace.visualstudio.com/items?itemName=jz5.PackageLicense" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=jz5.PackageLicense</a><br><br>### Package Folder<br><br>Package Folder not exist for the solution?<br><br>#### NuGet.Config<br><br>Create Nuget.Config for the solution.<br><br>    &lt;?xml version=”1.0” encoding=”utf-8”?&gt;<br>    <configuration><br>    <config><br>        <add key="globalPackagesFolder" value=".\packages"><br>    </add></config><br>    </configuration><br><br><img src="../../list_package_licenses.jpg"><br><br><img src="list_package_licenses.jpg" alt="pic"><br><br></div><h3 id="Solution-5-Custom-package-licenses-command-line"><a href="#Solution-5-Custom-package-licenses-command-line" class="headerlink" title="Solution 5 - Custom package licenses command line"></a>Solution 5 - Custom package licenses command line</h3><div id="solution5"><br><br>TODO<br><br><a href="https://github.com/do-it-ger/DoitPackagesLicenses" target="_blank" rel="noopener">https://github.com/do-it-ger/DoitPackagesLicenses</a><br><br></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ToDo: Get all licenses from used NuGet Packages in the Visual Studio Solution. Create a licence text file or Excel file with all found li
      
    
    </summary>
    
    
  </entry>
  
</feed>
